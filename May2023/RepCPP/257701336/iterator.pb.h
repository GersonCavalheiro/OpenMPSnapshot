
#ifndef PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fiterator_2eproto
#define PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fiterator_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  
#include <google/protobuf/extension_set.h>  
#include <google/protobuf/unknown_field_set.h>
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto 

namespace protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto {
struct TableStruct {
static const ::google::protobuf::internal::ParseTableField entries[];
static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
static const ::google::protobuf::internal::ParseTable schema[1];
static const ::google::protobuf::internal::FieldMetadata field_metadata[];
static const ::google::protobuf::internal::SerializationTable serialization_table[];
static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  
namespace tensorflow {
class IteratorStateMetadata;
class IteratorStateMetadataDefaultTypeInternal;
extern IteratorStateMetadataDefaultTypeInternal _IteratorStateMetadata_default_instance_;
}  
namespace google {
namespace protobuf {
template<> ::tensorflow::IteratorStateMetadata* Arena::CreateMaybeMessage<::tensorflow::IteratorStateMetadata>(Arena*);
}  
}  
namespace tensorflow {


class IteratorStateMetadata : public ::google::protobuf::Message  {
public:
IteratorStateMetadata();
virtual ~IteratorStateMetadata();

IteratorStateMetadata(const IteratorStateMetadata& from);

inline IteratorStateMetadata& operator=(const IteratorStateMetadata& from) {
CopyFrom(from);
return *this;
}
#if LANG_CXX11
IteratorStateMetadata(IteratorStateMetadata&& from) noexcept
: IteratorStateMetadata() {
*this = ::std::move(from);
}

inline IteratorStateMetadata& operator=(IteratorStateMetadata&& from) noexcept {
if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
if (this != &from) InternalSwap(&from);
} else {
CopyFrom(from);
}
return *this;
}
#endif
inline ::google::protobuf::Arena* GetArena() const final {
return GetArenaNoVirtual();
}
inline void* GetMaybeArenaPointer() const final {
return MaybeArenaPtr();
}
static const ::google::protobuf::Descriptor* descriptor();
static const IteratorStateMetadata& default_instance();

static void InitAsDefaultInstance();  
static inline const IteratorStateMetadata* internal_default_instance() {
return reinterpret_cast<const IteratorStateMetadata*>(
&_IteratorStateMetadata_default_instance_);
}
static constexpr int kIndexInFileMessages =
0;

void UnsafeArenaSwap(IteratorStateMetadata* other);
void Swap(IteratorStateMetadata* other);
friend void swap(IteratorStateMetadata& a, IteratorStateMetadata& b) {
a.Swap(&b);
}


inline IteratorStateMetadata* New() const final {
return CreateMaybeMessage<IteratorStateMetadata>(NULL);
}

IteratorStateMetadata* New(::google::protobuf::Arena* arena) const final {
return CreateMaybeMessage<IteratorStateMetadata>(arena);
}
void CopyFrom(const ::google::protobuf::Message& from) final;
void MergeFrom(const ::google::protobuf::Message& from) final;
void CopyFrom(const IteratorStateMetadata& from);
void MergeFrom(const IteratorStateMetadata& from);
void Clear() final;
bool IsInitialized() const final;

size_t ByteSizeLong() const final;
bool MergePartialFromCodedStream(
::google::protobuf::io::CodedInputStream* input) final;
void SerializeWithCachedSizes(
::google::protobuf::io::CodedOutputStream* output) const final;
::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
bool deterministic, ::google::protobuf::uint8* target) const final;
int GetCachedSize() const final { return _cached_size_.Get(); }

private:
void SharedCtor();
void SharedDtor();
void SetCachedSize(int size) const final;
void InternalSwap(IteratorStateMetadata* other);
protected:
explicit IteratorStateMetadata(::google::protobuf::Arena* arena);
private:
static void ArenaDtor(void* object);
inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
private:
inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
return _internal_metadata_.arena();
}
inline void* MaybeArenaPtr() const {
return _internal_metadata_.raw_arena_ptr();
}
public:

::google::protobuf::Metadata GetMetadata() const final;



int keys_size() const;
void clear_keys();
static const int kKeysFieldNumber = 2;
const ::std::string& keys(int index) const;
::std::string* mutable_keys(int index);
void set_keys(int index, const ::std::string& value);
#if LANG_CXX11
void set_keys(int index, ::std::string&& value);
#endif
void set_keys(int index, const char* value);
void set_keys(int index, const char* value, size_t size);
::std::string* add_keys();
void add_keys(const ::std::string& value);
#if LANG_CXX11
void add_keys(::std::string&& value);
#endif
void add_keys(const char* value);
void add_keys(const char* value, size_t size);
const ::google::protobuf::RepeatedPtrField< ::std::string>& keys() const;
::google::protobuf::RepeatedPtrField< ::std::string>* mutable_keys();

void clear_version();
static const int kVersionFieldNumber = 1;
const ::std::string& version() const;
void set_version(const ::std::string& value);
#if LANG_CXX11
void set_version(::std::string&& value);
#endif
void set_version(const char* value);
void set_version(const char* value, size_t size);
::std::string* mutable_version();
::std::string* release_version();
void set_allocated_version(::std::string* version);
PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
"    string fields are deprecated and will be removed in a"
"    future release.")
::std::string* unsafe_arena_release_version();
PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
"    string fields are deprecated and will be removed in a"
"    future release.")
void unsafe_arena_set_allocated_version(
::std::string* version);

private:

::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
typedef void InternalArenaConstructable_;
typedef void DestructorSkippable_;
::google::protobuf::RepeatedPtrField< ::std::string> keys_;
::google::protobuf::internal::ArenaStringPtr version_;
mutable ::google::protobuf::internal::CachedSize _cached_size_;
friend struct ::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::TableStruct;
};



#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  

inline void IteratorStateMetadata::clear_version() {
version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& IteratorStateMetadata::version() const {
return version_.Get();
}
inline void IteratorStateMetadata::set_version(const ::std::string& value) {

version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
}
#if LANG_CXX11
inline void IteratorStateMetadata::set_version(::std::string&& value) {

version_.Set(
&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
}
#endif
inline void IteratorStateMetadata::set_version(const char* value) {
GOOGLE_DCHECK(value != NULL);

version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
GetArenaNoVirtual());
}
inline void IteratorStateMetadata::set_version(const char* value,
size_t size) {

version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
}
inline ::std::string* IteratorStateMetadata::mutable_version() {

return version_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* IteratorStateMetadata::release_version() {

return version_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void IteratorStateMetadata::set_allocated_version(::std::string* version) {
if (version != NULL) {

} else {

}
version_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version,
GetArenaNoVirtual());
}
inline ::std::string* IteratorStateMetadata::unsafe_arena_release_version() {
GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);

return version_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
GetArenaNoVirtual());
}
inline void IteratorStateMetadata::unsafe_arena_set_allocated_version(
::std::string* version) {
GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
if (version != NULL) {

} else {

}
version_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
version, GetArenaNoVirtual());
}

inline int IteratorStateMetadata::keys_size() const {
return keys_.size();
}
inline void IteratorStateMetadata::clear_keys() {
keys_.Clear();
}
inline const ::std::string& IteratorStateMetadata::keys(int index) const {
return keys_.Get(index);
}
inline ::std::string* IteratorStateMetadata::mutable_keys(int index) {
return keys_.Mutable(index);
}
inline void IteratorStateMetadata::set_keys(int index, const ::std::string& value) {
keys_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void IteratorStateMetadata::set_keys(int index, ::std::string&& value) {
keys_.Mutable(index)->assign(std::move(value));
}
#endif
inline void IteratorStateMetadata::set_keys(int index, const char* value) {
GOOGLE_DCHECK(value != NULL);
keys_.Mutable(index)->assign(value);
}
inline void IteratorStateMetadata::set_keys(int index, const char* value, size_t size) {
keys_.Mutable(index)->assign(
reinterpret_cast<const char*>(value), size);
}
inline ::std::string* IteratorStateMetadata::add_keys() {
return keys_.Add();
}
inline void IteratorStateMetadata::add_keys(const ::std::string& value) {
keys_.Add()->assign(value);
}
#if LANG_CXX11
inline void IteratorStateMetadata::add_keys(::std::string&& value) {
keys_.Add(std::move(value));
}
#endif
inline void IteratorStateMetadata::add_keys(const char* value) {
GOOGLE_DCHECK(value != NULL);
keys_.Add()->assign(value);
}
inline void IteratorStateMetadata::add_keys(const char* value, size_t size) {
keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
IteratorStateMetadata::keys() const {
return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
IteratorStateMetadata::mutable_keys() {
return &keys_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  


}  


#endif  
