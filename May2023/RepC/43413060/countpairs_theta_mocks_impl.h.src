#pragma once
#ifdef __cplusplus
extern "C" {
#endif
#include "defs.h" 
#include "weight_defs_DOUBLE.h"
#include <inttypes.h> 
#include "countpairs_theta_mocks.h"
extern void interrupt_handler_wtheta_mocks_DOUBLE(int signo);
typedef int (*countpairs_theta_mocks_func_ptr_DOUBLE)(const int64_t N0, DOUBLE *x0, DOUBLE *y0,
DOUBLE *z0, const weight_struct_DOUBLE *weights0,
const int64_t N1, DOUBLE *x1, DOUBLE *y1,
DOUBLE *z1, const weight_struct_DOUBLE *weights1,
const int same_cell, const int order,
const DOUBLE costhetamax, const DOUBLE costhetamin, const int nthetabin,
const DOUBLE *costheta_upp,
const DOUBLE min_xdiff, const DOUBLE min_ydiff,
const DOUBLE min_zdiff, const DOUBLE closest_icell_xpos,
const DOUBLE closest_icell_ypos, const DOUBLE closest_icell_zpos,
DOUBLE *src_rpavg, uint64_t *src_npairs,
DOUBLE *src_weightavg, const weight_method_t weight_method);
extern countpairs_theta_mocks_func_ptr_DOUBLE countpairs_theta_mocks_driver_DOUBLE(const struct config_options *options) __attribute__((warn_unused_result));
extern int countpairs_theta_mocks_DOUBLE(const int64_t ND1, DOUBLE *phi1, DOUBLE *theta1,
const int64_t ND2, DOUBLE *phi2, DOUBLE *theta2,
const int numthreads,
const int autocorr,
const char *binfile,
results_countpairs_theta *results,
struct config_options *options, struct extra_options *extra);
extern int check_ra_dec_DOUBLE(const int64_t N, DOUBLE *phi, DOUBLE *theta);
#ifdef __cplusplus
}
#endif
